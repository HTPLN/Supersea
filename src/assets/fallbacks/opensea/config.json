{
  "nextSsrProps": {
    "scriptSelector": "script#__NEXT_DATA__",
    "paths": {
      "profileUsername": "props.ssrData.account.user.publicUsername",
      "profileAddress": "props.ssrData.account.address",
      "profileImageUrl": "props.ssrData.account.imageUrl"
    }
  },
  "routes": {
    "searchResults": {
      "url": "/collection/{collectionSlug}?tab=supersea",
      "as": "/collection/{collectionSlug}?tab=supersea"
    },
    "asset": {
      "url": "/assets/{chainPath}{address}/{tokenId}",
      "as": "/assets/{chainPath}{address}/{tokenId}"
    },
    "collection": {
      "url": "/collection/{collectionSlug}",
      "as": "/collection/{collectionSlug}"
    },
    "collectionFloor": {
      "url": "/collection/{collectionSlug}?search[sortAscending]=true&search[sortBy]=PRICE&search[toggles][0]=BUY_NOW",
      "as": "/collection/{collectionSlug}?search[sortAscending]=true&search[sortBy]=PRICE&search[toggles][0]=BUY_NOW"
    },
    "traitFloor": {
      "url": "/collection/{collectionSlug}?search[sortAscending]=true&search[sortBy]=PRICE&search[stringTraits][0][name]={name}&search[stringTraits][0][values][0]={value}&search[toggles][0]=BUY_NOW",
      "as": "/collection/{collectionSlug}?search[sortAscending]=true&search[sortBy]=PRICE&search[stringTraits][0][name]={name}&search[stringTraits][0][values][0]={value}&search[toggles][0]=BUY_NOW"
    },
    "profile": {
      "url": "/{identifier}",
      "as": "/{identifier}"
    }
  },
  "queryHeaders": {
    "x-api-key": "2f6f419a083c46de9d83ce3dbe7db601",
    "x-build-id": "8SgJR4aoK4YT9zXZhkly2",
    "content-type": "application/json"
  },
  "queries": {
    "EventHistoryQuery": {
      "body": "query EventHistoryQuery(\n  $archetype: ArchetypeInputType\n  $bundle: BundleSlug\n  $collections: [CollectionSlug!]\n  $categories: [CollectionSlug!]\n  $chains: [ChainScalar!]\n  $eventTypes: [EventType!]\n  $cursor: String\n  $count: Int = 16\n  $showAll: Boolean = false\n  $identity: IdentityInputType\n) {\n  ...EventHistory_data_L1XK6\n}\n\nfragment AccountLink_data on AccountType {\n  address\n  config\n  isCompromised\n  user {\n    publicUsername\n    id\n  }\n  displayName\n  ...ProfileImage_data\n  ...wallet_accountKey\n  ...accounts_url\n}\n\nfragment AssetMediaAnimation_asset on AssetType {\n  ...AssetMediaImage_asset\n}\n\nfragment AssetMediaAudio_asset on AssetType {\n  backgroundColor\n  ...AssetMediaImage_asset\n}\n\nfragment AssetMediaContainer_asset_2V84VL on AssetType {\n  backgroundColor\n  ...AssetMediaEditions_asset_2V84VL\n}\n\nfragment AssetMediaEditions_asset_2V84VL on AssetType {\n  decimals\n}\n\nfragment AssetMediaImage_asset on AssetType {\n  backgroundColor\n  imageUrl\n  collection {\n    displayData {\n      cardDisplayStyle\n    }\n    id\n  }\n}\n\nfragment AssetMediaPlaceholderImage_asset on AssetType {\n  collection {\n    displayData {\n      cardDisplayStyle\n    }\n    id\n  }\n}\n\nfragment AssetMediaVideo_asset on AssetType {\n  backgroundColor\n  ...AssetMediaImage_asset\n}\n\nfragment AssetMediaWebgl_asset on AssetType {\n  backgroundColor\n  ...AssetMediaImage_asset\n}\n\nfragment AssetMedia_asset on AssetType {\n  animationUrl\n  displayImageUrl\n  imageUrl\n  isDelisted\n  ...AssetMediaAnimation_asset\n  ...AssetMediaAudio_asset\n  ...AssetMediaContainer_asset_2V84VL\n  ...AssetMediaImage_asset\n  ...AssetMediaPlaceholderImage_asset\n  ...AssetMediaVideo_asset\n  ...AssetMediaWebgl_asset\n}\n\nfragment CollectionCell_collection on CollectionType {\n  name\n  imageUrl\n  isVerified\n  ...collection_url\n}\n\nfragment CollectionCell_trait on TraitType {\n  traitType\n  value\n}\n\nfragment CollectionLink_assetContract on AssetContractType {\n  address\n  blockExplorerLink\n}\n\nfragment CollectionLink_collection on CollectionType {\n  name\n  verificationStatus\n  ...collection_url\n}\n\nfragment EventHistory_data_L1XK6 on Query {\n  assetEvents(after: $cursor, bundle: $bundle, archetype: $archetype, first: $count, categories: $categories, collections: $collections, chains: $chains, eventTypes: $eventTypes, identity: $identity, includeHidden: true) {\n    edges {\n      node {\n        collection {\n          ...CollectionCell_collection\n          id\n        }\n        traitCriteria {\n          ...CollectionCell_trait\n          id\n        }\n        itemQuantity\n        item @include(if: $showAll) {\n          __typename\n          relayId\n          verificationStatus\n          ...ItemCell_data\n          ...item_url\n          ... on AssetType {\n            collection {\n              ...CollectionLink_collection\n              id\n            }\n            assetContract {\n              ...CollectionLink_assetContract\n              id\n            }\n          }\n          ... on AssetBundleType {\n            bundleCollection: collection {\n              ...CollectionLink_collection\n              id\n            }\n          }\n          ... on Node {\n            __isNode: __typename\n            id\n          }\n        }\n        relayId\n        eventTimestamp\n        eventType\n        orderExpired\n        customEventName\n        ...utilsAssetEventLabel\n        creatorFee {\n          unit\n        }\n        devFeePaymentEvent {\n          ...EventTimestamp_data\n          id\n        }\n        fromAccount {\n          address\n          ...AccountLink_data\n          id\n        }\n        perUnitPrice {\n          unit\n          eth\n          usd\n        }\n        endingPriceType {\n          unit\n        }\n        priceType {\n          unit\n        }\n        payment {\n          ...TokenPricePayment\n          id\n        }\n        seller {\n          ...AccountLink_data\n          id\n        }\n        toAccount {\n          ...AccountLink_data\n          id\n        }\n        winnerAccount {\n          ...AccountLink_data\n          id\n        }\n        ...EventTimestamp_data\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment EventTimestamp_data on AssetEventType {\n  eventTimestamp\n  transaction {\n    blockExplorerLink\n    id\n  }\n}\n\nfragment ItemCell_data on ItemType {\n  __isItemType: __typename\n  __typename\n  name\n  ...item_url\n  ... on AssetType {\n    collection {\n      name\n      id\n    }\n    ...AssetMedia_asset\n  }\n  ... on AssetBundleType {\n    bundleCollection: collection {\n      name\n      id\n    }\n    assetQuantities(first: 30) {\n      edges {\n        node {\n          asset {\n            name\n            ...AssetMedia_asset\n            id\n          }\n          relayId\n          id\n        }\n      }\n    }\n  }\n}\n\nfragment ProfileImage_data on AccountType {\n  imageUrl\n}\n\nfragment TokenPricePayment on PaymentAssetType {\n  symbol\n  chain {\n    identifier\n  }\n  asset {\n    imageUrl\n    assetContract {\n      blockExplorerLink\n      id\n    }\n    id\n  }\n}\n\nfragment accounts_url on AccountType {\n  address\n  user {\n    publicUsername\n    id\n  }\n}\n\nfragment asset_url on AssetType {\n  assetContract {\n    address\n    id\n  }\n  tokenId\n  chain {\n    identifier\n  }\n}\n\nfragment bundle_url on AssetBundleType {\n  slug\n  chain {\n    identifier\n  }\n}\n\nfragment collection_url on CollectionType {\n  slug\n  isCategory\n}\n\nfragment item_url on ItemType {\n  __isItemType: __typename\n  __typename\n  ... on AssetType {\n    ...asset_url\n  }\n  ... on AssetBundleType {\n    ...bundle_url\n  }\n}\n\nfragment utilsAssetEventLabel on AssetEventType {\n  isMint\n  isAirdrop\n  eventType\n}\n\nfragment wallet_accountKey on AccountType {\n  address\n}\n",
      "staticHeaders": {
        "x-signed-query": "271a4f18899705c51c47b85daee8848ef9b0eb59610db733d09b10d8e58f9256"
      },
      "staticVariables": {
        "archetype": null,
        "bundle": null,
        "categories": null,
        "chains": null,
        "cursor": null,
        "identity": null,
        "showAll": true,
        "eventTypes": ["AUCTION_CREATED", "AUCTION_SUCCESSFUL"],
        "count": 1
      },
      "dynamicVariablePaths": {
        "collectionSlugs": "collections"
      },
      "resultPaths": {
        "edges": "data.assetEvents.edges",
        "asset": "node.item",
        "listingId": "node.relayId",
        "tokenId": "node.item.tokenId",
        "contractAddress": "node.item.assetContract.address",
        "sellerAddress": "node.seller.address",
        "blockExplorerLink": "node.transaction.blockExplorerLink",
        "chain": "node.item.assetContract.chain",
        "name": "node.item.name",
        "collectionName": "node.item.collection.name",
        "image": "node.item.displayImageUrl",
        "price": "node.perUnitPrice.eth",
        "currency": "node.payment.symbol",
        "timestamp": "node.eventTimestamp",
        "eventType": "node.eventType"
      },
      "priceInEth": true
    },
    "EventHistoryPollQuery": {
      "body": "query EventHistoryPollQuery(\n  $archetype: ArchetypeInputType\n  $categories: [CollectionSlug!]\n  $chains: [ChainScalar!]\n  $collections: [CollectionSlug!]\n  $count: Int = 10\n  $cursor: String\n  $eventTimestamp_Gt: DateTime\n  $eventTypes: [EventType!]\n  $identity: IdentityInputType\n  $showAll: Boolean = false\n) {\n  assetEvents(after: $cursor, archetype: $archetype, categories: $categories, chains: $chains, collections: $collections, eventTimestamp_Gt: $eventTimestamp_Gt, eventTypes: $eventTypes, first: $count, identity: $identity, includeHidden: true) {\n    edges {\n      node {\n        collection {\n          ...CollectionCell_collection\n          id\n        }\n        traitCriteria {\n          ...CollectionCell_trait\n          id\n        }\n        itemQuantity\n        item @include(if: $showAll) {\n          __typename\n          relayId\n          verificationStatus\n          ...ItemCell_data\n          ...item_url\n          ... on AssetType {\n            collection {\n              ...CollectionLink_collection\n              id\n            }\n            assetContract {\n              ...CollectionLink_assetContract\n              id\n            }\n          }\n          ... on AssetBundleType {\n            bundleCollection: collection {\n              ...CollectionLink_collection\n              id\n            }\n          }\n          ... on Node {\n            __isNode: __typename\n            id\n          }\n        }\n        relayId\n        eventTimestamp\n        eventType\n        customEventName\n        orderExpired\n        ...utilsAssetEventLabel\n        creatorFee {\n          unit\n        }\n        devFeePaymentEvent {\n          ...EventTimestamp_data\n          id\n        }\n        fromAccount {\n          address\n          ...AccountLink_data\n          id\n        }\n        perUnitPrice {\n          unit\n          eth\n          usd\n        }\n        endingPriceType {\n          unit\n        }\n        priceType {\n          unit\n        }\n        payment {\n          ...TokenPricePayment\n          id\n        }\n        seller {\n          ...AccountLink_data\n          id\n        }\n        toAccount {\n          ...AccountLink_data\n          id\n        }\n        winnerAccount {\n          ...AccountLink_data\n          id\n        }\n        ...EventTimestamp_data\n        id\n      }\n    }\n  }\n}\n\nfragment AccountLink_data on AccountType {\n  address\n  config\n  isCompromised\n  user {\n    publicUsername\n    id\n  }\n  displayName\n  ...ProfileImage_data\n  ...wallet_accountKey\n  ...accounts_url\n}\n\nfragment AssetMediaAnimation_asset on AssetType {\n  ...AssetMediaImage_asset\n}\n\nfragment AssetMediaAudio_asset on AssetType {\n  backgroundColor\n  ...AssetMediaImage_asset\n}\n\nfragment AssetMediaContainer_asset_2V84VL on AssetType {\n  backgroundColor\n  ...AssetMediaEditions_asset_2V84VL\n}\n\nfragment AssetMediaEditions_asset_2V84VL on AssetType {\n  decimals\n}\n\nfragment AssetMediaImage_asset on AssetType {\n  backgroundColor\n  imageUrl\n  collection {\n    displayData {\n      cardDisplayStyle\n    }\n    id\n  }\n}\n\nfragment AssetMediaPlaceholderImage_asset on AssetType {\n  collection {\n    displayData {\n      cardDisplayStyle\n    }\n    id\n  }\n}\n\nfragment AssetMediaVideo_asset on AssetType {\n  backgroundColor\n  ...AssetMediaImage_asset\n}\n\nfragment AssetMediaWebgl_asset on AssetType {\n  backgroundColor\n  ...AssetMediaImage_asset\n}\n\nfragment AssetMedia_asset on AssetType {\n  animationUrl\n  displayImageUrl\n  imageUrl\n  isDelisted\n  ...AssetMediaAnimation_asset\n  ...AssetMediaAudio_asset\n  ...AssetMediaContainer_asset_2V84VL\n  ...AssetMediaImage_asset\n  ...AssetMediaPlaceholderImage_asset\n  ...AssetMediaVideo_asset\n  ...AssetMediaWebgl_asset\n}\n\nfragment CollectionCell_collection on CollectionType {\n  name\n  imageUrl\n  isVerified\n  ...collection_url\n}\n\nfragment CollectionCell_trait on TraitType {\n  traitType\n  value\n}\n\nfragment CollectionLink_assetContract on AssetContractType {\n  address\n  blockExplorerLink\n}\n\nfragment CollectionLink_collection on CollectionType {\n  name\n  verificationStatus\n  ...collection_url\n}\n\nfragment EventTimestamp_data on AssetEventType {\n  eventTimestamp\n  transaction {\n    blockExplorerLink\n    id\n  }\n}\n\nfragment ItemCell_data on ItemType {\n  __isItemType: __typename\n  __typename\n  name\n  ...item_url\n  ... on AssetType {\n    collection {\n      name\n      id\n    }\n    ...AssetMedia_asset\n  }\n  ... on AssetBundleType {\n    bundleCollection: collection {\n      name\n      id\n    }\n    assetQuantities(first: 30) {\n      edges {\n        node {\n          asset {\n            name\n            ...AssetMedia_asset\n            id\n          }\n          relayId\n          id\n        }\n      }\n    }\n  }\n}\n\nfragment ProfileImage_data on AccountType {\n  imageUrl\n}\n\nfragment TokenPricePayment on PaymentAssetType {\n  symbol\n  chain {\n    identifier\n  }\n  asset {\n    imageUrl\n    assetContract {\n      blockExplorerLink\n      id\n    }\n    id\n  }\n}\n\nfragment accounts_url on AccountType {\n  address\n  user {\n    publicUsername\n    id\n  }\n}\n\nfragment asset_url on AssetType {\n  assetContract {\n    address\n    id\n  }\n  tokenId\n  chain {\n    identifier\n  }\n}\n\nfragment bundle_url on AssetBundleType {\n  slug\n  chain {\n    identifier\n  }\n}\n\nfragment collection_url on CollectionType {\n  slug\n  isCategory\n}\n\nfragment item_url on ItemType {\n  __isItemType: __typename\n  __typename\n  ... on AssetType {\n    ...asset_url\n  }\n  ... on AssetBundleType {\n    ...bundle_url\n  }\n}\n\nfragment utilsAssetEventLabel on AssetEventType {\n  isMint\n  isAirdrop\n  eventType\n}\n\nfragment wallet_accountKey on AccountType {\n  address\n}\n",
      "staticHeaders": {
        "x-signed-query": "db9a6e348ead17fe6edf4a9d2dfb1360998f6ca7385a642f8e7ca1b98307a86e"
      },
      "staticVariables": {
        "archetype": null,
        "categories": null,
        "chains": null,
        "cursor": null,
        "identity": null,
        "showAll": true,
        "eventTypes": ["AUCTION_CREATED", "AUCTION_SUCCESSFUL"],
        "count": 32
      },
      "dynamicVariablePaths": {
        "collectionSlugs": "collections",
        "timestamp": "eventTimestamp_Gt"
      },
      "resultPaths": {
        "edges": "data.assetEvents.edges",
        "asset": "node.item",
        "listingId": "node.relayId",
        "tokenId": "node.item.tokenId",
        "contractAddress": "node.item.assetContract.address",
        "sellerAddress": "node.seller.address",
        "blockExplorerLink": "node.transaction.blockExplorerLink",
        "chain": "node.item.assetContract.chain",
        "name": "node.item.name",
        "collectionName": "node.item.collection.name",
        "image": "node.item.displayImageUrl",
        "price": "node.perUnitPrice.eth",
        "currency": "node.payment.symbol",
        "timestamp": "node.eventTimestamp",
        "eventType": "node.eventType"
      },
      "priceInEth": true
    },
    "AssetSelectionSetPrivacyMutation": {
      "body": "mutation AssetSelectionSetPrivacyMutation(\n  $assets: [AssetRelayID!]!\n  $isPrivate: Boolean!\n) {\n  assetOwnerships {\n    batchSetPrivacy(assets: $assets, isPrivate: $isPrivate)\n  }\n}\n",
      "staticHeaders": {
        "x-signed-query": "76bfedb6347a46b1e94eb9bd6ea445cff873538d64b2b0a0d28f0779c43c5609"
      },
      "staticVariables": {},
      "dynamicVariablePaths": {
        "assets": "assets",
        "isPrivate": "isPrivate"
      },
      "resultPaths": {
        "success": "data.assetOwnerships.batchSetPrivacy"
      }
    }
  },
  "injectionSelectors": {
    "activity": {
      "button": {
        "selector": ".Navbar--main > ul:last-of-type",
        "injectionMethod": "prepend"
      }
    },
    "transferInfo": {
      "formSelector": "body[data-supersea-path^=\"/assets/\"][data-supersea-path$=\"/transfer\"] form",
      "node": {
        "selector": "body[data-supersea-path^=\"/assets/\"][data-supersea-path$=\"/transfer\"] form i[value=report_problem]",
        "injectionMethod": "insertBefore"
      }
    },
    "assetInfo": {
      "grid": {
        "node": {
          "selector": "article.AssetSearchList--asset",
          "injectionMethod": "append"
        },
        "link": {
          "selector": ".Asset--anchor",
          "hierarchy": "either"
        },
        "collectionLink": {
          "selector": ".AssetCardFooter--collection-name",
          "hierarchy": "either"
        },
        "image": {
          "selector": ".Image--image, .AssetMedia--img img, .SuperSea__Image",
          "hierarchy": "child"
        }
      },
      "list": {
        "node": {
          "selector": "*[data-testid='ActivityTable'] div[width='300px']:nth-child(2), *[data-testid='ActivityTable'] div[width='240px']:nth-child(2), *[data-testid='ActivityTable'] div[width='150px']:nth-child(2)",
          "injectionMethod": "prepend"
        },
        "link": {
          "selector": "a[href^=\"/assets\"], a[href^=\"/zh-CN/assets\"]",
          "hierarchy": "either"
        },
        "collectionLink": {
          "selector": "a[href^=\"/collection\"], a[href^=\"/zh-CN/collection\"]",
          "hierarchy": "either"
        },
        "image": {
          "selector": ".Image--image, .AssetMedia--img img, .SuperSea__Image",
          "hierarchy": "child"
        }
      },
      "item": {
        "node": {
          "selector": ".item--summary > article, .item--small > article",
          "injectionMethod": "append"
        },
        "link": {
          "selector": "a[href^=\"/assets\"], a[href^=\"/zh-CN/assets\"]",
          "hierarchy": "child"
        },
        "collectionLink": {
          "selector": ".CollectionLink--link",
          "hierarchy": "outside"
        },
        "image": {
          "selector": ".Image--image, .AssetMedia--img img, .SuperSea__Image",
          "hierarchy": "child"
        }
      },
      "sell": {
        "node": {
          "selector": "body[data-supersea-path$=\"/sell\"] article",
          "injectionMethod": "append"
        },
        "link": {
          "selector": "a[href^=\"/assets\"], a[href^=\"/zh-CN/assets\"]",
          "hierarchy": "child"
        },
        "collectionLink": {
          "selector": "a[href^=\"/collection\"], a[href^=\"/zh-CN/collection\"]",
          "hierarchy": "child"
        },
        "image": {
          "selector": ".AssetMedia--img img",
          "hierarchy": "child"
        }
      }
    },
    "bundleVerification": {
      "frameSelector": ".Bundle--summary-frame",
      "linkSelector": ".Bundle--items-list > a",
      "headerSelector": ".Panel--header"
    },
    "profileSummary": {
      "node": {
        "selector": "body:not([data-supersea-path^=\"/collection/\"]):not([data-supersea-path=\"\"]):not([data-supersea-path^=\"/rankings\"]):not([data-supersea-path=\"/\"]) *[data-testid=\"ProfilePage--navbar\"]",
        "injectionMethod": "insertBefore"
      }
    },
    "collectionStats": {
      "node": {
        "selector": "body[data-supersea-path^=\"/collection/\"] *[data-testid=\"ProfilePage--navbar\"]",
        "injectionMethod": "insertBefore"
      }
    },
    "searchResults": {
      "menuSelector": "body[data-supersea-path^=\"/collection/\"] main nav ul > div",
      "containerSelector": "#main-search-results"
    }
  }
}
